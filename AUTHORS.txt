BROCARD Thimotee

EVEN Melvin
Environemments :
    - Implémentation de StackEnvironment
    - Utilisation du stack dans le parser
Parser : 
    - Toutes les règles
    - Détection des erreurs (redéfinition de variables/fonctions, redéclaration de fonction, etc...)
Code intermédiaire : 
    - Code intermédiaire : NodeIf, NodeCallFct, NodeAssign, NodePtrAccess, NodeNew, NodeReturn, NodeId, NodeRel
    - L'affichage en .dot du code intermédiaire
    - Linéarisation de l'arbre de code intermédiaire
Scanner : 
    - Mots clés et opérateurs
    - Le mode débug du scanner
    - Une partie du scanner

LESNE Nathan
- Scanner :
    - Utilisation des  états
    - Gestion des strings et des nombres Héxadécimaux/Octaux
    - Mode débug
    - Ponctuation

- Création + utilisation des Exceptions
- Enums dans NodeRel et NodeOp
- Code intermédiaire :
    - NodeCase, NodeSwitch

TOY-RIONT--LE DOSSEUR Maelle
Parser :
- Elaboration du parser
- Déclaration de variable/type/fonction	
- Résolution de bugs et problèmes de précédence
- Traitement des programmes dans le parser 
- Gestion de l'ambiguité avec dandling if/else
- Traitement des arguments des fonctions avec la pile 
Code intermédiaire : 
- NodeIf, NodeWhile, NodeSwitch, NodeCallFct, NodeAssign, NodeOp, NodePtrAccess, NodeArrayAccess
- Résolution de bugs dans le code intermédiaire
Autre :
- Refactoring du code   
- Gestion de l'affichage de l'arbre du code intermédiaire (résolution de bugs)
- Réflexion autours des choix d'implémentation 
